/**
 * Custom validation error type describing request/response validation errors
 *
 * @param {string} message - A readable message describing the error
 * @param {Object} options - Optional error configurations
 * @param {string} options.schema - The schema describing that the target was validated against
 * @param {Object} options.target - The invalid target generating the validation error
 * @param {{ path: string, name: string, argument: string, message: string }[]} options.errors - The error objects generated by the JSON schema validators during validation
 */
class ValidationError extends Error {
  constructor(message='Request validation failed', { target=undefined, schema=undefined, errors=undefined }) {
    super(message);
    this.name = 'Validation Error';
    this.errors = errors.map(({ path, name, argument, message }) => ({ path, name, argument, message }));
    this.target = target;
    this.schema = schema;
  }
}

module.exports = ValidationError;
